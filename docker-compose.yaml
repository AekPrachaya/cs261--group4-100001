networks:
  cs261-group:
    driver: bridge

services:
  postgresql:
    image: 'bitnami/postgresql:latest'
    environment:
      - POSTGRESQL_USERNAME=dev
      - POSTGRESQL_PASSWORD=cs261isnotevenfun
      - POSTGRESQL_DATABASE=tupetition
    ports:
      - '5432:5432'
    networks:
      - cs261-group
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U dev" ]
      interval: 5s
      timeout: 5s
      retries: 5

  nodejs:
    image: 'node:latest' # Use the latest Node.js image or specify a version like 'node:18'
    working_dir: /app
    volumes:
      - .:/app # Mount the current directory to /app in the container
    command: "sh -c 'npm install && npm run dev'" # Adjust this command if your app has a different start script
    environment:
      - TU_API_KEY=TUd21d517fb7db46c7f23286d8ef81e3247fedcf5d65be3a954f8580e1605e806d2c6c1acbc6f3b6fbff1d218465983de3
      - CLOUDINARY_URL=cloudinary://568454168881338:Ml-CEcZMDUZXzexlN1nKa2q5rMQ@dv8olw3cr
      - POSTGRESQL_URL=postgresql://dev:cs261isnotevenfun@postgresql:5432/tupetition
    ports:
      - '3000:3000' # Map port 3000 on the host to port 3000 in the container
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - cs261-group
